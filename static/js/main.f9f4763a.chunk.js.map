{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/Filter.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","activeTodo","setActiveTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","React","memo","filterBy","setFilterBy","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","Loader","TodoModal","useState","userIsLoading","setUserIsLoading","activeUser","setActiveUser","loadUser","a","userId","user","useEffect","href","email","name","App","setTodos","todosToShow","setTodosToShow","todosAreLoading","setTodosAreLoading","ALL","loadTodos","todosFromServer","filteredTodos","filter","includes","toLowerCase","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9f4763a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  activeTodo: Todo | null,\n  setActiveTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  activeTodo,\n  setActiveTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={classNames(\n            {\n              'has-background-info-light':\n                activeTodo && todo.id === activeTodo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {(todo.completed) && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setActiveTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    activeTodo && todo.id === activeTodo.id\n                      ? 'fa-eye-slash'\n                      : 'fa-eye',\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filterBy: string,\n  setFilterBy: React.Dispatch<React.SetStateAction<Filter>>,\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(\n  ({\n    filterBy,\n    setFilterBy,\n    query,\n    setQuery,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={filterBy}\n              onChange={(event) => {\n                setFilterBy(event.target.value as Filter);\n              }}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={(event) => {\n              setQuery(event.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {(query) && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setQuery('');\n                }}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  setActiveTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n  activeTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ setActiveTodo, activeTodo }) => {\n  const [userIsLoading, setUserIsLoading] = useState<boolean>(false);\n  const [activeUser, setActiveUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    setUserIsLoading(true);\n    const user = await getUser(activeTodo.userId);\n\n    setActiveUser(user);\n    setUserIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userIsLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setActiveTodo(null);\n                setActiveUser(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                activeTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              {activeUser && (\n                <a href={`mailto:${activeUser.email}`}>\n                  {activeUser.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { Todo } from './types/Todo';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToShow, setTodosToShow] = useState<Todo[]>([]);\n  const [todosAreLoading, setTodosAreLoading] = useState<boolean>(false);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.ALL);\n  const [query, setQuery] = useState<string>('');\n\n  const handleTodoListLoad = () => {\n    if (!todosAreLoading && todosToShow.length > 0) {\n      return (\n        <TodoList\n          todos={todosToShow}\n          activeTodo={activeTodo}\n          setActiveTodo={setActiveTodo}\n        />\n      );\n    }\n\n    if (!todosAreLoading && todosToShow.length === 0) {\n      return 'Todos are not found!';\n    }\n\n    return (<Loader />);\n  };\n\n  const loadTodos = async () => {\n    setTodosAreLoading(true);\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setTodosToShow([...todosFromServer]);\n    setTodosAreLoading(false);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  useEffect(() => {\n    const filteredTodos = todos\n      .filter(todo => {\n        switch (filterBy) {\n          case 'all':\n            return true;\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default:\n            return false;\n        }\n      })\n      .filter(todo => todo.title.includes(query.toLowerCase()));\n\n    setTodosToShow(filteredTodos);\n  }, [filterBy, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {handleTodoListLoad()}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          setActiveTodo={setActiveTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}